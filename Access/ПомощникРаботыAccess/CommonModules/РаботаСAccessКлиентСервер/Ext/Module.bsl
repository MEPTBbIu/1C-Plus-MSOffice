
#Область ПрограммныйИнтерфейс

Функция СоставлениеСтруктурыОписанияПолей(Знач ТаблицаДанных, Знач ИмяТаблицы) Экспорт
	
	СтруктураОписания = Новый Структура("ИмяТаблицы,ОписаниеПолей");
    СтруктураОписания.ИмяТаблицы = ИмяТаблицы;
    СтруктураОписания.ОписаниеПолей = Новый Массив;
    
    ОбщийРазмерЗаписиБайт = 0;
	ИндексКолонки = 0;
    Для Каждого КолонкаТЗ Из ТаблицаДанных.Колонки Цикл
		
		СтруктураСвойстПоля = Новый Структура("Имя,Тип,Длина, ДлинаДробнойЧасти, Синоним, ТипЗначения, ИндексКолонки, ИмяТипаЗначения, ДлинаБайт");
        ТипЗначенияКолонки = КолонкаТЗ.ТипЗначения;		
        ДлинаСтроки = ТипЗначенияКолонки.КвалификаторыСтроки.Длина;
		Разрядность = ТипЗначенияКолонки.КвалификаторыЧисла.Разрядность;
		РазрядностьДробнойЧасти = ТипЗначенияКолонки.КвалификаторыЧисла.РазрядностьДробнойЧасти;
		ДлинаСтроки = КолонкаТЗ.ТипЗначения.КвалификаторыСтроки.Длина;
		СтруктураСвойстПоля.ДлинаБайт = 0;
		
		Если ТипЗначенияКолонки.Типы().Количество() > 2 Тогда
			
			СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "202";//adVarWChar, type 202 [строка в Юникоде длиной в 255 символов (DT_WSTR)] 
            СтруктураСвойстПоля.Длина = 255;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(255)";
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
			СтруктураСвойстПоля.ДлинаБайт = 255 + 10;
			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Строка")) Тогда
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
			СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;			
			
			ДополнительныйТип = Неопределено;
			ТипыПоля = ТипЗначенияКолонки.Типы();
			Если ТипыПоля.Количество() > 1 Тогда
				Для Каждого ТипПоля Из ТипыПоля Цикл
					Если ТипПоля <> Тип("Строка") Тогда
						ДополнительныйТип = ТипПоля;	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ДлинаСтроки = 0 И НЕ ДополнительныйТип = Неопределено Тогда
				ДлинаСтроки = РаботаСAccessВызовСервера.ПолучитьДлинуПредставленияСсылочнгоТипа(ДополнительныйТип);
			КонецЕсли;
			
            Если ДлинаСтроки = 0 ИЛИ ДлинаСтроки >= 250 Тогда
                СтруктураСвойстПоля.Тип = "202";//adLongVarWChar ("memo"), type 203 [текстовый поток в Юникоде (DT_NTEXT)]
				СтруктураСвойстПоля.ИмяТипаЗначения = "VARCHAR";
				СтруктураСвойстПоля.Длина = 250;
				СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(" + XMLСтрока(СтруктураСвойстПоля.Длина) + ")";
				СтруктураСвойстПоля.ДлинаБайт = СтруктураСвойстПоля.Длина + 10;
            Иначе
                СтруктураСвойстПоля.Тип = "202";//adVarWChar, type 202 [строка в Юникоде длиной в 255 символов (DT_WSTR)]
				//СтруктураСвойстПоля.Тип = "203"; // Memo	MEMO	dbMemo	12	C	adLongVarWChar	203	CB
				СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(" + XMLСтрока(ДлинаСтроки) + ")";
				СтруктураСвойстПоля.Длина = ДлинаСтроки;
				СтруктураСвойстПоля.ДлинаБайт = СтруктураСвойстПоля.Длина + 10;
			КонецЕсли;
			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Число")) Тогда
			
			СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ТипЗначения = Тип("Число");
			
			Если Разрядность = 0 ИЛИ РазрядностьДробнойЧасти = 0 Тогда
				СтруктураСвойстПоля.Тип = "5";//adDouble, type 5	
				СтруктураСвойстПоля.ИмяТипаЗначения = "DECIMAL(15,2)";
				СтруктураСвойстПоля.Длина = 15;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = 2;
				СтруктураСвойстПоля.ДлинаБайт = 8;
			ИначеЕсли Разрядность = 0 И РазрядностьДробнойЧасти > 0 Тогда
				СтруктураСвойстПоля.Тип = "5";//adDouble, type 5	
				СтруктураСвойстПоля.ИмяТипаЗначения = "DECIMAL(1," + XMLСтрока(РазрядностьДробнойЧасти) + ")";
				СтруктураСвойстПоля.Длина = 1;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = РазрядностьДробнойЧасти;
				СтруктураСвойстПоля.ДлинаБайт = 8;
			ИначеЕсли РазрядностьДробнойЧасти > 0 И Разрядность > 0 Тогда
				СтруктураСвойстПоля.Тип = "5";//adDouble, type 5	
				СтруктураСвойстПоля.ИмяТипаЗначения = "DECIMAL(" + XMLСтрока(Разрядность) + "," + XMLСтрока(РазрядностьДробнойЧасти) + ")";
				СтруктураСвойстПоля.Длина = Разрядность;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = РазрядностьДробнойЧасти;
				СтруктураСвойстПоля.ДлинаБайт = 8;
			Иначе
				СтруктураСвойстПоля.Тип = "3";//adInteger, type 3
				СтруктураСвойстПоля.ИмяТипаЗначения = "INTEGER";
				СтруктураСвойстПоля.Длина = Разрядность;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = 0;
				СтруктураСвойстПоля.ДлинаБайт = 2;
			КонецЕсли;
			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Булево")) Тогда
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Булево");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "11";//adBoolean, type 11
            СтруктураСвойстПоля.Длина = Неопределено;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "BIT";
			СтруктураСвойстПоля.ДлинаБайт = 2;
			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Дата")) Тогда
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Дата");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "7";//adDate, type 7
            СтруктураСвойстПоля.Длина = Неопределено;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "DATETIME";
			СтруктураСвойстПоля.ДлинаБайт = 8;
			
		Иначе
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "202";//adVarWChar, type 202 [строка в Юникоде длиной в 255 символов (DT_WSTR)]
			//СтруктураСвойстПоля.Тип = "203"; // Memo	MEMO	dbMemo	12	C	adLongVarWChar	203	CB
            СтруктураСвойстПоля.Длина = 150;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(150)";
			СтруктураСвойстПоля.ДлинаБайт = СтруктураСвойстПоля.Длина + 10;
			
			
        КонецЕсли;
		
		СтруктураСвойстПоля.ИндексКолонки = ИндексКолонки;		
        СтруктураОписания.ОписаниеПолей.Добавить(СтруктураСвойстПоля);
		ОбщийРазмерЗаписиБайт = ОбщийРазмерЗаписиБайт + СтруктураСвойстПоля.ДлинаБайт;
		ИндексКолонки = ИндексКолонки + 1;
    КонецЦикла;
		
    Возврат СтруктураОписания;
КонецФункции

#КонецОбласти

#Область Служебные

Функция ПолучитьСоединениеADO(ПутьКБазе) Экспорт
	
	СтрокаПодключения = "Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=" + ПутьКБазе;
	СоединениеКБазе = Новый COMОбъект("ADODB.Connection");	
	
	Попытка 		
		СоединениеКБазе.Open(СтрокаПодключения);		
	Исключение
		СоединениеКБазе = Неопределено;
		ВызватьИсключение
			"Произошла ошибка при установке соединения.
			|
			|Подробности:
			|" + ОписаниеОшибки();		
	КонецПопытки;	
	
	Возврат СоединениеКБазе;
	
КонецФункции

Процедура ЗакрытьСоединениеADO(Соединение) Экспорт
	
	Если Соединение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Соединение.Close();
	Исключение
		
	КонецПопытки;
	
	Соединение = Неопределено;
	
КонецПроцедуры

Процедура Ожидание(Миллисекунды) Экспорт
	
	ЖдатьДо = ТекущаяУниверсальнаяДатаВМиллисекундах() + (Миллисекунды);
	Пока ЖдатьДо >= ТекущаяУниверсальнаяДатаВМиллисекундах() Цикл
		// Ничего не делаем
	КонецЦикла;
	
КонецПроцедуры

Функция УдалитьФайлЕслиВозможно(ПутьКФайлу) Экспорт
	
	Попытка
		УдалитьФайлы(ПутьКФайлу);
		Возврат Истина;
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
КонецФункции

#КонецОбласти