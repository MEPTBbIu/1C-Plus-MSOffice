
#Область ПрограммныйИнтерфейс

Процедура СоздатьФайлБазыДанных(ПутьКФайлу, ПерезаписыватьФайл = Истина) Экспорт
	
	Если ПустаяСтрока(ПутьКФайлу) Тогда 
		ВызватьИсключение "Пустой путь к файлу базы данных";
	Иначе
		Если ПерезаписыватьФайл Тогда
			Файл = Новый Файл(ПутьКФайлу);
			Если Файл.Существует() Тогда
				Файл = Неопределено;
				УдалитьФайлы(ПутьКФайлу);
			КонецЕсли;
		КонецЕсли;              
	КонецЕсли;
	
	Попытка
		ДанныеШаблона = ПолучитьМакет("TemplateAccessDB");
		ДанныеШаблона.Записать(ПутьКФайлу);
	Исключение
		ВызватьИсключение
			"Не удалось сформировать файл с данными. 
			|
			|Ошибка: " + ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры

Процедура СоздатьТаблицуБазыДанных(ПутьКБазе, ОписаниеТаблицы, Соединение = Неопределено) Экспорт
	
	ЗакрытьСоединение = Ложь;
	Если Соединение = Неопределено Тогда
		Соединение = ПолучитьСоединениеADO(ПутьКБазе);
		ЗакрытьСоединение = Истина;
	КонецЕсли;
		
	Команда = Новый COMОбъект("ADODB.Command");
	Команда.ActiveConnection = Соединение;
	ТекстЗапроса = 
		"CREATE TABLE " + ОписаниеТаблицы.ИмяТаблицы +  "
		|(";	
	НомерПоля = 1;
	ВсегоПолей = ОписаниеТаблицы.ОписаниеПолей.Количество();
	Для Каждого ПолеТаблицы Из ОписаниеТаблицы.ОписаниеПолей Цикл
		
		ЭтоПоследнееПоле = (НомерПоля = ВсегоПолей);
		
		ТекстЗапроса = ТекстЗапроса + "
		|	" + ПолеТаблицы.Имя + " " + ПолеТаблицы.ИмяТипаЗначения + ?(ЭтоПоследнееПоле, "", ",");
		
		НомерПоля = НомерПоля + 1;
		
	КонецЦикла;
			
	ТекстЗапроса = ТекстЗапроса + "
		|)";
	
	Команда.CommandText=ТекстЗапроса;
	Попытка
		Команда.Execute();
	Исключение
		ВызватьИсключение
			"Произошла ошибка при создании таблицы.
			|
			|Подробности:
			|" + ОписаниеОшибки();		
	КонецПопытки;

	Если ЗакрытьСоединение Тогда
		ЗакрытьСоединениеADO(Соединение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СоставлениеСтруктурыОписанияПолей(Знач ТаблицаДанных, Знач ИмяТаблицы) Экспорт
	
	СтруктураОписания = Новый Структура("ИмяТаблицы,ОписаниеПолей");
    СтруктураОписания.ИмяТаблицы = ИмяТаблицы;
    СтруктураОписания.ОписаниеПолей = Новый Массив;
    
    //обходим колонки таблицы значений
	ИндексКолонки = 0;
    Для Каждого КолонкаТЗ Из ТаблицаДанных.Колонки Цикл
        СтруктураСвойстПоля = Новый Структура("Имя,Тип,Длина,Синоним, ТипЗначения, ИндексКолонки, ИмяТипаЗначения");
        ТипЗначенияКолонки = КолонкаТЗ.ТипЗначения;		
        ДлинаСтроки = ТипЗначенияКолонки.КвалификаторыСтроки.Длина;
		РазрядностьДробнойЧасти = ТипЗначенияКолонки.КвалификаторыЧисла.РазрядностьДробнойЧасти;
		Разрядность = ТипЗначенияКолонки.КвалификаторыЧисла.Разрядность;
		ДлинаСтроки = КолонкаТЗ.ТипЗначения.КвалификаторыСтроки.Длина;
		
		Если ТипЗначенияКолонки.Типы().Количество() > 2 Тогда
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "202";//adVarWChar, type 202 [строка в Юникоде длиной в 255 символов (DT_WSTR)] 
            СтруктураСвойстПоля.Длина = 255;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(255)";
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Строка")) Тогда
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            Если ДлинаСтроки = 0 ИЛИ ДлинаСтроки >= 255 Тогда
                СтруктураСвойстПоля.Тип = "203";//adLongVarWChar ("memo"), type 203 [текстовый поток в Юникоде (DT_NTEXT)]
				СтруктураСвойстПоля.ИмяТипаЗначения = "VARCHAR";
            Иначе
                СтруктураСвойстПоля.Тип = "202";//adVarWChar, type 202 [строка в Юникоде длиной в 255 символов (DT_WSTR)]
				СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(255)";
			КонецЕсли;
			СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Число")) Тогда
			СтруктураСвойстПоля.ТипЗначения = Тип("Число");
			Если РазрядностьДробнойЧасти > 0 ИЛИ Разрядность = 0 Тогда
				СтруктураСвойстПоля.Тип = "5";//adDouble, type 5	
				СтруктураСвойстПоля.ИмяТипаЗначения = "DECIMAL(15,2)";
			Иначе
				СтруктураСвойстПоля.Тип = "3";//adInteger, type 3
				СтруктураСвойстПоля.ИмяТипаЗначения = "INTEGER";
			КонецЕсли;
			СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
			Если Разрядность > 0 Тогда
				СтруктураСвойстПоля.Длина = Разрядность;
			Иначе
				СтруктураСвойстПоля.Длина = 0;
			КонецЕсли;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Булево")) Тогда
			СтруктураСвойстПоля.ТипЗначения = Тип("Булево");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "11";//adBoolean, type 11
            СтруктураСвойстПоля.Длина = Неопределено;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "BIT";
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Дата")) Тогда
			СтруктураСвойстПоля.ТипЗначения = Тип("Дата");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "7";//adDate, type 7
            СтруктураСвойстПоля.Длина = Неопределено;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "DATETIME";
		Иначе
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "202";//adVarWChar, type 202 [строка в Юникоде длиной в 255 символов (DT_WSTR)]
            СтруктураСвойстПоля.Длина = 255;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(255)";
        КонецЕсли;
		
		СтруктураСвойстПоля.ИндексКолонки = ИндексКолонки;		
        СтруктураОписания.ОписаниеПолей.Добавить(СтруктураСвойстПоля);
		ИндексКолонки = ИндексКолонки + 1;
    КонецЦикла;
    
    Возврат СтруктураОписания;
КонецФункции

#КонецОбласти

#Область Служебные

Функция ПолучитьСоединениеADO(ПутьКБазе) Экспорт
	
	СтрокаПодключения = "Driver={Microsoft Access Driver (*.mdb, *.accdb)};DBQ=" + ПутьКБазе;
	СоединениеКБазе = Новый COMОбъект("ADODB.Connection");	
	
	Попытка 		
		СоединениеКБазе.Open(СтрокаПодключения);		
	Исключение
		СоединениеКБазе = Неопределено;
		ВызватьИсключение
			"Произошла ошибка при установке соединения.
			|
			|Подробности:
			|" + ОписаниеОшибки();		
	КонецПопытки;	
	
	Возврат СоединениеКБазе;
	
КонецФункции

Процедура ЗакрытьСоединениеADO(Соединение) Экспорт
	
	Если Соединение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		Соединение.Close();
	Исключение		
	КонецПопытки;
	
	Соединение = Неопределено;
	
КонецПроцедуры

#КонецОбласти
