
#Область ПрограммныйИнтерфейс

Функция СоставлениеСтруктурыОписанияПолей(Знач ТаблицаДанных, Знач ИмяТаблицы) Экспорт
	
	СтруктураОписания = Новый Структура("ИмяТаблицы,ОписаниеПолей");
    СтруктураОписания.ИмяТаблицы = ИмяТаблицы;
    СтруктураОписания.ОписаниеПолей = Новый Массив;
    
    ОбщийРазмерЗаписиБайт = 0;
	ИндексКолонки = 0;
    Для Каждого КолонкаТЗ Из ТаблицаДанных.Колонки Цикл
		
		СтруктураСвойстПоля = Новый Структура("Имя,Тип,Длина, ДлинаДробнойЧасти, Синоним, ТипЗначения, ИндексКолонки, ИмяТипаЗначения, ДлинаБайт");
        ТипЗначенияКолонки = КолонкаТЗ.ТипЗначения;		
        ДлинаСтроки = ТипЗначенияКолонки.КвалификаторыСтроки.Длина;
		Разрядность = ТипЗначенияКолонки.КвалификаторыЧисла.Разрядность;
		РазрядностьДробнойЧасти = ТипЗначенияКолонки.КвалификаторыЧисла.РазрядностьДробнойЧасти;
		ДлинаСтроки = КолонкаТЗ.ТипЗначения.КвалификаторыСтроки.Длина;
		СтруктураСвойстПоля.ДлинаБайт = 0;
		
		Если ТипЗначенияКолонки.Типы().Количество() > 2 Тогда
			
			СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "202";//adVarWChar, type 202 [строка в Юникоде длиной в 255 символов (DT_WSTR)] 
            СтруктураСвойстПоля.Длина = 255;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(" + XMLСтрока(СтруктураСвойстПоля.Длина) + ")";
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
			СтруктураСвойстПоля.ДлинаБайт = 255 + 10;
			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Строка")) Тогда
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
			СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;			
			
			ДополнительныйТип = Неопределено;
			ТипыПоля = ТипЗначенияКолонки.Типы();
			Если ТипыПоля.Количество() > 1 Тогда
				Для Каждого ТипПоля Из ТипыПоля Цикл
					Если ТипПоля <> Тип("Строка") Тогда
						ДополнительныйТип = ТипПоля;	
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Если ДлинаСтроки = 0 И НЕ ДополнительныйТип = Неопределено Тогда
				ДлинаСтроки = РаботаСAccessВызовСервера.ПолучитьДлинуПредставленияСсылочнгоТипа(ДополнительныйТип);
			КонецЕсли;
			
			Если ДлинаСтроки = 0 ИЛИ ДлинаСтроки >= 250 Тогда
				
                СтруктураСвойстПоля.Тип = "202";
				СтруктураСвойстПоля.Длина = 250;				
				СтруктураСвойстПоля.ДлинаБайт = СтруктураСвойстПоля.Длина + 10;
				СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(" + XMLСтрока(СтруктураСвойстПоля.Длина) + ")";
				
            Иначе
                СтруктураСвойстПоля.Тип = "202";
				СтруктураСвойстПоля.Длина = ДлинаСтроки;
				СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(" + XMLСтрока(СтруктураСвойстПоля.Длина) + ")";				
				СтруктураСвойстПоля.ДлинаБайт = СтруктураСвойстПоля.Длина + 10;
				
			КонецЕсли;
			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Число")) Тогда
			
			СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;
			СтруктураСвойстПоля.ТипЗначения = Тип("Число");
			
			Если Разрядность = 0 ИЛИ РазрядностьДробнойЧасти = 0 Тогда
				
				СтруктураСвойстПоля.Тип = "5";					
				СтруктураСвойстПоля.Длина = 15;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = 2;
				СтруктураСвойстПоля.ДлинаБайт = 8;
				СтруктураСвойстПоля.ИмяТипаЗначения = "DOUBLE";
				
			ИначеЕсли Разрядность = 0 И РазрядностьДробнойЧасти > 0 Тогда
				
				СтруктураСвойстПоля.Тип = "5";					
				СтруктураСвойстПоля.Длина = 1;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = РазрядностьДробнойЧасти;
				СтруктураСвойстПоля.ДлинаБайт = 8;
				СтруктураСвойстПоля.ИмяТипаЗначения = "DOUBLE";
				
			ИначеЕсли РазрядностьДробнойЧасти > 0 И Разрядность > 0 Тогда
				
				СтруктураСвойстПоля.Тип = "5";					
				СтруктураСвойстПоля.Длина = Разрядность;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = РазрядностьДробнойЧасти;
				СтруктураСвойстПоля.ДлинаБайт = 8;
				СтруктураСвойстПоля.ИмяТипаЗначения = "DOUBLE";
				
			Иначе
				
				СтруктураСвойстПоля.Тип = "3";				
				СтруктураСвойстПоля.Длина = Разрядность;
				СтруктураСвойстПоля.ДлинаДробнойЧасти = 0;
				СтруктураСвойстПоля.ДлинаБайт = 2;
				СтруктураСвойстПоля.ИмяТипаЗначения = "INTEGER";
				
			КонецЕсли;
						
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Булево")) Тогда
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Булево");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "11";
            СтруктураСвойстПоля.Длина = Неопределено;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;			
			СтруктураСвойстПоля.ДлинаБайт = 2;
			СтруктураСвойстПоля.ИмяТипаЗначения = "BIT";
			
		ИначеЕсли ТипЗначенияКолонки.СодержитТип(Тип("Дата")) Тогда
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Дата");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "7";
            СтруктураСвойстПоля.Длина = Неопределено;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;			
			СтруктураСвойстПоля.ДлинаБайт = 8;
			СтруктураСвойстПоля.ИмяТипаЗначения = "DATETIME";
			
		Иначе
			
			СтруктураСвойстПоля.ТипЗначения = Тип("Строка");
            СтруктураСвойстПоля.Имя = КолонкаТЗ.Имя;
            СтруктураСвойстПоля.Тип = "202";
            СтруктураСвойстПоля.Длина = 150;
            СтруктураСвойстПоля.Синоним = КолонкаТЗ.Заголовок;			
			СтруктураСвойстПоля.ДлинаБайт = СтруктураСвойстПоля.Длина + 10;
			СтруктураСвойстПоля.ИмяТипаЗначения = "CHAR(" + XMLСтрока(СтруктураСвойстПоля.Длина) + ")";
			
        КонецЕсли;
		
		СтруктураСвойстПоля.ИндексКолонки = ИндексКолонки;		
        СтруктураОписания.ОписаниеПолей.Добавить(СтруктураСвойстПоля);
		ОбщийРазмерЗаписиБайт = ОбщийРазмерЗаписиБайт + СтруктураСвойстПоля.ДлинаБайт;
		ИндексКолонки = ИндексКолонки + 1;
		
    КонецЦикла;
		
    Возврат СтруктураОписания;
	
КонецФункции

Функция ПолучитьДлинуПредставленияСсылочнгоТипа(ТипСсылки) Экспорт
	
	ДлинаПредставленияСсылки = 0;
	МетаданныеПоТипу = Метаданные.НайтиПоТипу(ТипСсылки);
	Если Метаданные.Перечисления.Содержит(МетаданныеПоТипу) Тогда
		
		ЗначенияПеречисления = МетаданныеПоТипу.ЗначенияПеречисления;	
		Для Каждого ЗначениеПеречисления Из ЗначенияПеречисления Цикл
			
			ДлинаПредставленияСсылки = Макс(ДлинаПредставленияСсылки, СтрДлина(ЗначениеПеречисления.Синоним));
			
		КонецЦикла;
		
	КонецЕсли;

	Возврат ДлинаПредставленияСсылки;
	
КонецФункции

Функция ПолучитьДвоичныеДанныеПустойБазыAccess() Экспорт
	
	Возврат ПолучитьОбщийМакет("ШаблонПустойБазыAccess");
	
КонецФункции

Процедура ЗаписатьИнформациюВЛог(Сообщение) Экспорт
	
	ЗаписьЖурналаРегистрации("MSOffice.Access", УровеньЖурналаРегистрации.Информация,,, Сообщение);
	
КонецПроцедуры

Процедура ЗаписатьОшибкуВЛог(Сообщение) Экспорт
	
	ЗаписьЖурналаРегистрации("MSOffice.Access", УровеньЖурналаРегистрации.Ошибка,,, Сообщение);
	
КонецПроцедуры

#КонецОбласти