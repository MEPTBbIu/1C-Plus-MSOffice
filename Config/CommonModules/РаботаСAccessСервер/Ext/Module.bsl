
#Область ПрограммныйИнтерфейс

Функция ВыгрузитьТаблицуЗначений(КаталогВыгрузки, ИсточникДанных, ИмяТаблицы = Неопределено, ОграниченияВыгрузкиКаждойБазы = Неопределено) Экспорт
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("КоличествоВыгружено", 0);
	
	Если ИмяТаблицы = Неопределено Тогда
		ИмяТаблицы = "ВыгрузкаОт" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd");
	КонецЕсли;
	
	// Получаем описание таблицы и ограничения каждой базы
	ОписаниеСтруктурыТаблицы = РаботаСAccessКлиентСервер.СоставлениеСтруктурыОписанияПолей(ИсточникДанных, ИмяТаблицы);
	Если ОграниченияВыгрузкиКаждойБазы = Неопределено Тогда
		ОграниченияВыгрузкиКаждойБазы = РаботаСAccessКлиентСервер.ПолучитьОграниченияВыгрузкиБазы();	
	КонецЕсли;
	
	// Инициализируем временные каталоги и шаблон базы
	ИдентификаторВыгрузки = Строка(Новый УникальныйИдентификатор);
	ВременныйРабочийКаталог = РаботаСAccessКлиентСервер.ПолучитьВременныйРабочийКаталог();
	ВременныйКаталогВыгрузки = РаботаСAccessКлиентСервер.ПолучитьВременныйКаталогВыгрузки(ИдентификаторВыгрузки);
	ПутьКШаблонуБазы = РаботаСAccessКлиентСервер.ПолучитьПутьКФайлуШаблонаБазы();	
	РаботаСAccessКлиентСервер.СоздатьБазуДанныхAccess(ПутьКШаблонуБазы, Истина, Ложь);
	Соединение = РаботаСAccessКлиентСервер.ПолучитьСоединениеADO(ПутьКШаблонуБазы);
	РаботаСAccessКлиентСервер.СоздатьТаблицуБазыДанных(ПутьКШаблонуБазы, ОписаниеСтруктурыТаблицы, Соединение, Ложь);
	РаботаСAccessКлиентСервер.ЗакрытьСоединениеADO(Соединение);
	
	// Инициализация вспомогательных параметров
	СоединениеСБазой = Неопределено;
	КоличествоВыгружено = 0;
	ФайлБазыДанныхОпределен = Ложь;
	НаборЗаписиТаблицыОпределен = Ложь;	
	НомерФайлаБазыДанных = 0;
	КоличествоВыгруженоВТекущуюБазу = 0;
	
	// Выгружаем данные
	Для Каждого Стр Из ИсточникДанных Цикл
		
		Если НЕ ФайлБазыДанныхОпределен Тогда
			НомерФайлаБазыДанных = НомерФайлаБазыДанных + 1;
			ПутьКФайлу = ВременныйКаталогВыгрузки + "\ПорцияВыгрузки_" + XMLСтрока(НомерФайлаБазыДанных) + ".accdb";				
			КопироватьФайл(ПутьКШаблонуБазы, ПутьКФайлу);
			СоединениеСБазой = РаботаСAccessКлиентСервер.ПолучитьСоединениеADO(ПутьКФайлу); 	
			ФайлБазыДанныхОпределен = Истина;
		КонецЕсли;
		
		Если НЕ НаборЗаписиТаблицыОпределен Тогда
			Запись = РаботаСAccessКлиентСервер.ПолучитьНаборЗаписейADO(СоединениеСБазой, ИмяТаблицы);
			НаборЗаписиТаблицыОпределен = Истина;
		КонецЕсли;
		
		РаботаСAccessКлиентСервер.ДобавитьЗаписьВТаблицу(
			ОписаниеСтруктурыТаблицы,
			Запись,
			Стр);
		
		КоличествоВыгружено = КоличествоВыгружено + 1;
		КоличествоВыгруженоВТекущуюБазу = КоличествоВыгруженоВТекущуюБазу + 1;
		
		ДостигнутоМаксимальноеКоличествоЗаписей = Ложь;
		ДостигнутМаксимальныйРазмерБазы = Ложь;
		Если КоличествоВыгруженоВТекущуюБазу >= ОграниченияВыгрузкиКаждойБазы.МаксимальноеКоличествоЗаписей Тогда
			ДостигнутоМаксимальноеКоличествоЗаписей = Истина;	
		КонецЕсли;		
		Если КоличествоВыгружено % ОграниченияВыгрузкиКаждойБазы.ПорцияВыгрузкиДляПроверкиРазмераБазы = 0 Тогда
			ФайлБазыДанных = Новый Файл(ПутьКФайлу);
			РаботаСAccessКлиентСервер.Ожидание(3000);
			РазмерВБайтах = ФайлБазыДанных.Размер();
			РазмерВМегабайтах = РазмерВБайтах / 1024 / 1024;			
			Если РазмерВМегабайтах > ОграниченияВыгрузкиКаждойБазы.МаксимальныйРазмерМБ Тогда
				ДостигнутМаксимальныйРазмерБазы = Истина;		
			КонецЕсли;	
		КонецЕсли;
		
		Если ДостигнутМаксимальныйРазмерБазы
			ИЛИ ДостигнутоМаксимальноеКоличествоЗаписей Тогда
			
			НаборЗаписиТаблицыОпределен = Ложь;
			Запись = Неопределено;
			
			РаботаСAccessКлиентСервер.ЗакрытьСоединениеADO(СоединениеСБазой);						
			ФайлБазыДанныхОпределен = Ложь;					
			КоличествоВыгруженоВТекущуюБазу = 0;

		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураРезультат.КоличествоВыгружено = КоличествоВыгружено;
	
	РаботаСAccessКлиентСервер.ЗакрытьСоединениеADO(СоединениеСБазой);
	
	// Переносим выгруженные базы в конечный каталог
	МассивСозданныхБаз = НайтиФайлы(ВременныйКаталогВыгрузки, "*.accdb", Ложь);
	Для Каждого ФайлБазы Из МассивСозданныхБаз Цикл
		ПереместитьФайл(ФайлБазы.ПолноеИмя, КаталогВыгрузки + "\" + ФайлБазы.Имя);
	КонецЦикла;
	
	РаботаСAccessКлиентСервер.УдалитьФайлЕслиВозможно(ВременныйКаталогВыгрузки);
	
	Возврат СтруктураРезультат;
	
КонецФункции

Процедура ВыгрузитьЗапрос(ПутьКбазе, ОбъектЗапроса, ИмяТаблицы = Неопределено, Соединение = Неопределено) Экспорт
	
	Если ИмяТаблицы = Неопределено Тогда
		ИмяТаблицы = "ВыгрузкаОт" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd");
	КонецЕсли;
	
	СЗ = Новый СхемаЗапроса;
	СЗ.УстановитьТекстЗапроса(ОбъектЗапроса.Текст);
	КолонкиЗапросов = СЗ.ПакетЗапросов[СЗ.ПакетЗапросов.Количество() - 1].Колонки;
	
	ТаблицаПрототип = Новый ТаблицаЗначений;
	Для Каждого ПолеЗапроса Из КолонкиЗапросов Цикл
		ТаблицаПрототип.Колонки.Добавить(ПолеЗапроса.Псевдоним, ПолеЗапроса.ТипЗначения); 
	КонецЦикла;	
	
	ОписаниеСтруктурыТаблицы = РаботаСAccessКлиентСервер.СоставлениеСтруктурыОписанияПолей(ТаблицаПрототип, ИмяТаблицы);
	
	РаботаСAccessКлиентСервер.СоздатьБазуДанныхAccess(ПутьКБазе, Истина, Ложь);
	
	ЗакрытьСоединениеПоЗавершению = Ложь;
	Если Соединение = Неопределено Тогда	
		Соединение = РаботаСAccessКлиентСервер.ПолучитьСоединениеADO(ПутьКБазе);	
		ЗакрытьСоединениеПоЗавершению = Истина;
	КонецЕсли;
	
	РаботаСAccessКлиентСервер.СоздатьТаблицуБазыДанных(ПутьКБазе, ОписаниеСтруктурыТаблицы, Соединение, Ложь);
	
	Запись = РаботаСAccessКлиентСервер.ПолучитьНаборЗаписейADO(Соединение, ИмяТаблицы);
	
	РезультатЗапроса = ОбъектЗапроса.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаЗапроса.Следующий() Цикл
		
		РаботаСAccessКлиентСервер.ДобавитьЗаписьВТаблицу(
			ОписаниеСтруктурыТаблицы,
			Запись,
			ВыборкаЗапроса);
		
	КонецЦикла;
	
	Если ЗакрытьСоединениеПоЗавершению Тогда
		
		РаботаСAccessКлиентСервер.ЗакрытьСоединениеADO(Соединение);
		
	КонецЕсли;	
	
КонецПроцедуры

Функция ВыгрузитьРезультатКомпоновки(СхемаКомпоновкиДанных, Настройки, ИмяТаблицы = Неопределено, Соединение = Неопределено) Экспорт
	
	Если ИмяТаблицы = Неопределено Тогда
		ИмяТаблицы = "ВыгрузкаОт" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd");
	КонецЕсли;
	
	ПараметрыВыгрукзи = ПолучитьПараметрыВыгрузкиРезультатаКомпоновки(СхемаКомпоновкиДанных, Настройки, ИмяТаблицы);
	
	ВременныйФайлБазыШбалона = ПолучитьИмяВременногоФайла("accdb");
	ДвоичныеДанныеПустойБазы = РаботаСAccessВызовСервера.ПолучитьДвоичныеДанныеПустойБазыAccess();
	ДвоичныеДанныеПустойБазы.Записать(ВременныйФайлБазыШбалона);
	ДвоичныеДанныеПустойБазы = Неопределено;
	
	РаботаСAccessКлиентСервер.СоздатьТаблицуБазыДанных(
		ВременныйФайлБазыШбалона, 
		ПараметрыВыгрукзи.ОписаниеСтруктурыТаблицы,
		Неопределено, 
		Ложь);	
	
	РезультатВыгрузки = 
		СКД_ВыгрузитьВAccess(
			Новый ДвоичныеДанные(ВременныйФайлБазыШбалона),
			ПараметрыВыгрукзи,
			СхемаКомпоновкиДанных,
			Настройки);
			
	РаботаСAccessКлиентСервер.УдалитьФайлЕслиВозможно(ВременныйФайлБазыШбалона);
			
	Возврат РезультатВыгрузки;
	
КонецФункции

#КонецОбласти

#Область Служебные

Функция ПолучитьПараметрыВыгрузкиРезультатаКомпоновки(СхемаКомпоновкиДанных, Настройки, ИмяТаблицы = Неопределено)
	
	ПараметрыВыгрузки = Новый Структура;
	ПараметрыВыгрузки.Вставить("ИмяТаблицы");
	ПараметрыВыгрузки.Вставить("ОписаниеСтруктурыТаблицы");
	ПараметрыВыгрузки.Вставить("СоответствиеВыраженияПараметраИПоляПрототипа");
	
	ДокументРезультат = Новый ТабличныйДокумент;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;          
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	Если ИмяТаблицы = Неопределено Тогда
		ИмяТаблицы = "ВыгрузкаОт" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd");
	КонецЕсли;
	СоответствиеВыраженияПараметраИПоляПрототипа = Новый Соответствие;
	ОписаниеСтруктурыТаблицы = Неопределено;
	
	Для Каждого НастройкиТекущегоМакета Из МакетКомпоновки.Макеты Цикл
		Если НастройкиТекущегоМакета.Параметры.Количество() > 0 Тогда
			ТаблицаПрототип = Новый ТаблицаЗначений;
			
			ПараметрыМакета = НастройкиТекущегоМакета.Параметры;
			Для Каждого ПараметрМакета Из ПараметрыМакета Цикл
				
				ИмяНабораДанных = Лев(ПараметрМакета.Выражение, СтрНайти(ПараметрМакета.Выражение, ".") - 1);
				
				Если НЕ ЗначениеЗаполнено(ИмяНабораДанных) Тогда
					Продолжить;
				КонецЕсли;
				
				ТекстЗапроса = МакетКомпоновки.НаборыДанных[ИмяНабораДанных].Запрос;
				СЗ = Новый СхемаЗапроса;
				СЗ.УстановитьТекстЗапроса(ТекстЗапроса);
				КолонкиЗапросов = СЗ.ПакетЗапросов[СЗ.ПакетЗапросов.Количество() - 1].Колонки;
				
				ПоляНабораДанных = МакетКомпоновки.НаборыДанных[ИмяНабораДанных].Поля;
				
				// 1. Находим поле набора данных
				ИмяПоля = Неопределено;
				ИмяПоляТаблицыПрототипа = Неопределено;
				Для Каждого ПолеНабора Из ПоляНабораДанных Цикл
					ПолныйПутьКДанным = ИмяНабораДанных + "." + ПолеНабора.ПутьКДанным;
					Если ПараметрМакета.Выражение = ПолныйПутьКДанным Тогда
						ИмяПоля = ПолеНабора.Имя;
						ИмяПоляТаблицыПрототипа = СтрЗаменить(ПолеНабора.ПутьКДанным, ".", "");
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				// 2. Находим по имени соответствующие поле запроса и его тип
				Для Каждого ПолеЗапроса Из КолонкиЗапросов Цикл
					Если ПолеЗапроса.Псевдоним = ИмяПоля Тогда
						НайденноеПолеЗапроса = ПолеЗапроса;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если НайденноеПолеЗапроса = Неопределено Тогда
					Продолжить;
				КонецЕсли;					
				ТипПоляЗапроса = НайденноеПолеЗапроса.ТипЗначения;
				
				// 3. Создаем колонку таб части с именем (путь к данным без точек) и типом (как в запросе)
				ТаблицаПрототип.Колонки.Добавить(ИмяПоляТаблицыПрототипа, ТипПоляЗапроса);
				
				СоответствиеВыраженияПараметраИПоляПрототипа.Вставить(ПараметрМакета.Выражение, ИмяПоляТаблицыПрототипа);
				
			КонецЦикла;
			
			ОписаниеСтруктурыТаблицы = РаботаСAccessКлиентСервер.СоставлениеСтруктурыОписанияПолей(ТаблицаПрототип, ИмяТаблицы);			
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыВыгрузки.ИмяТаблицы = ИмяТаблицы;
	ПараметрыВыгрузки.ОписаниеСтруктурыТаблицы = ОписаниеСтруктурыТаблицы;
	ПараметрыВыгрузки.СоответствиеВыраженияПараметраИПоляПрототипа = СоответствиеВыраженияПараметраИПоляПрототипа;
	
	Возврат ПараметрыВыгрузки;	
	
КонецФункции

Функция СКД_ВыгрузитьВAccess(ДанныеБазыШаблона, ПараметрыВыгрузки, СхемаКомпоновкиДанных, Настройки)
		
	ИдентификаторВыгрузки = Строка(Новый УникальныйИдентификатор);
	ВременныйКаталог = КаталогВременныхФайлов() + ИдентификаторВыгрузки;
	СоздатьКаталог(ВременныйКаталог);
	ПутьКШаблонуБазы = ВременныйКаталог + "\TempldateAccessDB.accdb";
	ДанныеБазыШаблона.Записать(ПутьКШаблонуБазы);
	
	ДокументРезультат = Новый ТабличныйДокумент;
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;          
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, Настройки);
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки,,, Истина);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);

	ИмяТаблицы = ПараметрыВыгрузки.ИмяТаблицы;
	СоединениеСБазой = Неопределено;
	
	КаталогВыгрузки = ВременныйКаталог + "\" + ИмяТаблицы;
	Попытка
		УдалитьФайлы(КаталогВыгрузки);
	Исключение КонецПопытки;
	РаботаСAccessКлиентСервер.Ожидание(1000);
	СоздатьКаталог(КаталогВыгрузки);
	ПутьКФайлу = Неопределено;
	Запись = Неопределено;
	ОписаниеСтруктурыТаблицы = ПараметрыВыгрузки.ОписаниеСтруктурыТаблицы;	
				
	КоличествоВыгружено = 0;
	ФайлБазыДанныхОпределен = Ложь;
	НаборЗаписиТаблицыОпределен = Ложь;
	КэшНастроекМакетов = Новый Соответствие;
	СоответствиеВыраженияПараметраИПоляПрототипа = Новый Соответствие;
	
	НомерФайлаБазыДанных = 0;
	ПроцессорВывода.НачатьВывод();	
	ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	Пока ЭлементРезультатКомпоновки <> Неопределено Цикл
						
		Если ЗначениеЗаполнено(ЭлементРезультатКомпоновки.Макет)
			И ЭлементРезультатКомпоновки.ЗначенияПараметров.Количество() > 0 Тогда
			
			СоответствиеПараметровИПолей = КэшНастроекМакетов.Получить(ЭлементРезультатКомпоновки.Макет);
			Если СоответствиеПараметровИПолей = Неопределено Тогда
				СоответствиеВыраженияПараметраИПоляПрототипа = ПараметрыВыгрузки.СоответствиеВыраженияПараметраИПоляПрототипа;
				СоответствиеПараметровИПолей = Новый Соответствие;					
				НастройкиТекущегоМакета = МакетКомпоновки.Макеты[ЭлементРезультатКомпоновки.Макет];
				ПараметрыМакета = НастройкиТекущегоМакета.Параметры;
				Для Каждого ПараметрМакета Из ПараметрыМакета Цикл
					ИмяПараметра = ПараметрМакета.Имя;
					ВыражениеПараметра = ПараметрМакета.Выражение;
					ИмяПоляИзВыражения = СоответствиеВыраженияПараметраИПоляПрототипа.Получить(ВыражениеПараметра);						
					СоответствиеПараметровИПолей.Вставить(ИмяПоляИзВыражения, ИмяПараметра);
				КонецЦикла;
				КэшНастроекМакетов.Вставить(ЭлементРезультатКомпоновки.Макет, СоответствиеПараметровИПолей);	
			КонецЕсли;
			
			#Область СозданиеФайлаБазыДанных
			
			Если НЕ ФайлБазыДанныхОпределен Тогда
				НомерФайлаБазыДанных = НомерФайлаБазыДанных + 1;
				ПутьКФайлу = КаталогВыгрузки + "\ПорцияВыгрузки_" + XMLСтрока(НомерФайлаБазыДанных) + ".accdb";				
				КопироватьФайл(ПутьКШаблонуБазы, ПутьКФайлу);
				СоединениеСБазой = РаботаСAccessКлиентСервер.ПолучитьСоединениеADO(ПутьКФайлу); 	
				ФайлБазыДанныхОпределен = Истина;
			КонецЕсли;
			
			#КонецОбласти
			
			#Область СозданиеНабораЗаписейТаблицы
			
			Если НЕ НаборЗаписиТаблицыОпределен Тогда
				Запись = РаботаСAccessКлиентСервер.ПолучитьНаборЗаписейADO(СоединениеСБазой, ИмяТаблицы);
				НаборЗаписиТаблицыОпределен = Истина;
			КонецЕсли;
			
			#КонецОбласти
			
			Если СоответствиеПараметровИПолей.Количество() > 0 Тогда
				
				СтруктураЗначенийЭлемента = Новый Структура;
				Для Каждого Эл Из ОписаниеСтруктурыТаблицы.ОписаниеПолей Цикл
					ИмяПараметраПоля = СоответствиеПараметровИПолей[Эл.Имя];
					ЗначениеПараметраПоля = ЭлементРезультатКомпоновки.ЗначенияПараметров[ИмяПараметраПоля].Значение;
					СтруктураЗначенийЭлемента.Вставить(Эл.Имя, ЗначениеПараметраПоля); 
				КонецЦикла;				
				
				РаботаСAccessКлиентСервер.ДобавитьЗаписьВТаблицу(
					ОписаниеСтруктурыТаблицы,
					Запись,
					СтруктураЗначенийЭлемента);
				
				КоличествоВыгружено = КоличествоВыгружено + 1;
				
				Если КоличествоВыгружено % 10000 = 0 Тогда
					ФайлБазыДанных = Новый Файл(ПутьКФайлу);
					РаботаСAccessКлиентСервер.Ожидание(3000);
					РазмерВБайтах = ФайлБазыДанных.Размер();
					РазмерВМегабайтах = РазмерВБайтах / 1024 / 1024;
					
					Если РазмерВМегабайтах > 1500 Тогда
						
						НаборЗаписиТаблицыОпределен = Ложь;
						Запись = Неопределено;
						
						РаботаСAccessКлиентСервер.ЗакрытьСоединениеADO(СоединениеСБазой);						
						ФайлБазыДанныхОпределен = Ложь;					
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		     		
		ЭлементРезультатКомпоновки = ПроцессорКомпоновкиДанных.Следующий();
	КонецЦикла;
	ПроцессорВывода.ЗакончитьВывод();
	РаботаСAccessКлиентСервер.ЗакрытьСоединениеADO(СоединениеСБазой);
		
	Коллекциябаз = НайтиФайлы(КаталогВыгрузки, "*.*");
	ПутьКАрхиву = ВременныйКаталог + "\" + Формат(ТекущаяДата(), "ДФ=yyyyMMdd") + "_ВыгрузкаДанных_" + ИмяТаблицы + ".zip";
	Архив = Новый ЗаписьZipФайла(ПутьКАрхиву,, "Выгрузка данных в Acces """ + ИмяТаблицы + """");
	Для Каждого ФайлБазы Из Коллекциябаз Цикл
		Архив.Добавить(ФайлБазы.ПолноеИмя, РежимСохраненияПутейZIP.НеСохранятьПути);
	КонецЦикла;
	Архив.Записать();
	
	СтруктураРезультат = Новый Структура;
	СтруктураРезультат.Вставить("АрхивВыгрузки", Новый ДвоичныеДанные(ПутьКАрхиву));
	СтруктураРезультат.Вставить("КоличествоВыгружено", КоличествоВыгружено);
	
	РаботаСAccessКлиентСервер.УдалитьФайлЕслиВозможно(ПутьКАрхиву);
	РаботаСAccessКлиентСервер.УдалитьФайлЕслиВозможно(ВременныйКаталог);
		
	Возврат СтруктураРезультат;
	
КонецФункции

#КонецОбласти